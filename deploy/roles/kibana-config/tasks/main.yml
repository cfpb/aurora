---
- name: Setup configuration
  template:
    src: "{{ kibana_config_file }}"
    dest: "{{ kibana_config_path }}/kibana.yml"
  notify:
    - restart kibana

- name: Create SSL folder
  file:
    dest: /opt/kibana/ssl
    state: directory
  when: kibana_generate_certs

- name: Generate SSL Certs if requested
  command: "openssl req -new -nodes -x509 -subj '/C={{ country }}/ST={{ state }}/L={{ city }}/O={{ organization_name }}/CN={{ ansible_hostname }}.{{ domain_name }}' -days 3650 -keyout {{ kibana_ssl_key_file }} -out {{ kibana_ssl_cert_file }} -extensions v3_ca"
  when: kibana_generate_certs
  args:
    creates: "{{ kibana_ssl_cert_file }}"

- name: Install kibana plugins
  command: /opt/kibana/bin/kibana plugin --install {{ item }}
  with_items: "{{ kibana_plugins }}"
  register: kibana_result
  failed_when: kibana_result.rc != 0 and "already exists" not in kibana_result.stderr
  changed_when: '"already exists" not in kibana_result.stderr'
  notify:
    - restart kibana

- name: Start Kibana
  service:
    name: kibana
    state: started

- name: Set recursive admin permissions on log folders
  acl:
    path: "{{ item }}"
    entity: "{{ restricted_group_name }}"
    etype: group
    permissions: rX
    recursive: yes
    state: present
  with_items: "{{ kibana_log_file_locations }}"

- name: Set default admin permissions on log folders
  acl:
    path: "{{ item }}"
    entity: "{{ restricted_group_name }}"
    etype: group
    permissions: rX
    default: yes
    state: present
  with_items: "{{ kibana_log_file_locations }}"