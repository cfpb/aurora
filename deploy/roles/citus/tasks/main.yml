---
- name: Add Citus rpm
  get_url:
    url: "{{ rpm_url }}"
    dest: /tmp/rpm.sh
    mode: "0755"
  when: not custom_repo
  tags:
    - citus

- name: Execute rpm script
  become: yes
  become_method: sudo
  shell: ./rpm.sh
  args:
    chdir: /tmp/
  when: not custom_repo
  changed_when: False
  tags:
    - citus

- name: Install Citus
  become: yes
  become_method: sudo
  yum:
    name: "{{ item }}"
    state: latest
  with_items: "{{ citus_pkgs }}"
  tags:
    - citus

- name: Add pgpass file
  become: yes
  become_method: sudo
  template:
    src: pgpass.j2
    dest: /var/lib/pgsql/.pgpass
    mode: "0600"
    owner: "{{ pp_superaccount }}"
    group: "{{ pp_superaccount }}"
  tags:
    - citus

- name: Ensure systemd directory exists
  file:
    state: directory
    path: /etc/systemd/system/postgresql-10.service.d
  tags:
    - citus

- name: Add CGroup settings cpu limit
  template:
    dest: /etc/systemd/system/postgresql-10.service.d/CPUQuota.conf
    src: citus_cpu.conf.j2
  when: citus_cpu_limit is defined
  notify:
    - reload-daemon
    - restart postgres
  tags:
    - citus

- name: Add CGroup settings memory limit
  template:
    dest: /etc/systemd/system/postgresql-10.service.d/MemoryLimit.conf
    src: citus_memory.conf.j2
  when: citus_mem_limit is defined
  notify:
    - reload-daemon
    - restart postgres
  tags:
    - citus

- name: Add kernel limits settings
  template:
    dest: /etc/systemd/system/postgresql-10.service.d/KernelLimits.conf
    src: citus_limits.conf.j2
  notify:
    - reload-daemon
    - restart postgres
  tags:
    - citus

# TODO: This should have a where clause to limit it to Citus hosts, or perhaps
# be moved to the Citus role.
- name: Update Citus extension
  postgresql_exec:
    login_host: localhost
    login_user: "{{ pp_superaccount }}"
    login_password: "{{ pp_superpassword }}"
    port: "{{ pp_serverport }}"
    db: "{{ item }}"
    script: ALTER EXTENSION citus UPDATE
  check_mode: no
  register: result
  when: upgrade_citus
  failed_when: '"extension \"citus\" does not exist" in result.notices'
  changed_when: result.notices is not defined or "is already installed" not in result.notices
  with_items: "{{ database_list.query_result }}"
