# main.yml - Establishes baseline IP Tables rules

# Basically, allows outgoing trafic and established connections,
# but blocks all incoming traffic except SSH.  This is meant to be replaced
# by more complex rules.
---
- name: Temporarily allow all
  command: "iptables -P INPUT ACCEPT"

- name: Flush existing rules
  command: "iptables -F"

- name: Create logging iptables_chain
  command: "iptables -N LOGDROP"
  ignore_errors: yes

- name: Create custom chain
  command: "iptables -N {{ iptables_chain }}"
  ignore_errors: yes

- name: Send INPUT to custom chain
  command: "iptables -A INPUT -j {{ iptables_chain }}"

- name: Send FORWARD to custom chain
  command: "iptables -A FORWARD -j {{ iptables_chain }}"

- name: Setup TCP logging
  command: "iptables -A LOGDROP -p tcp -m limit --limit 2/min --limit-burst 10 -j LOG --log-prefix 'TCP LOGDROP: ' --log-level 4"

- name: Setup UDP logging
  command: "iptables -A LOGDROP -p udp -m limit --limit 2/min --limit-burst 10 -j LOG --log-prefix 'UDP LOGDROP: ' --log-level 4"

- name: Setup ICMP logging
  command: "iptables -A LOGDROP -p icmp -m limit --limit 2/min --limit-burst 10 -j LOG --log-prefix 'ICMP LOGDROP: ' --log-level 4"

- name: Setup Fragment logging
  command: "iptables -A LOGDROP -f -p all -m limit --limit 2/min --limit-burst 10 -j LOG --log-prefix 'FRAGMENT LOGDROP: ' --log-level 4"

- name: Drop after logging
  command: "iptables -A LOGDROP -p all -j DROP"

- name: Allow localhost
  command: "iptables -A {{ iptables_chain }} -i lo -j ACCEPT"

- name: Allow ICMP type 255
  command: "iptables -A {{ iptables_chain }} -p icmp -m icmp --icmp-type 255 -j ACCEPT"

- name: Allow established and related
  command: "iptables -A {{ iptables_chain }} -m state --state ESTABLISHED,RELATED -j ACCEPT"

- name: Allow each port listed in iptables_common group variable
  command: "iptables -A {{ iptables_chain }}{% if 'state' in item %} -m state --state {{ item.state }}{% endif %} -p {{ item.protocol }} -m {{ item.protocol }}{% if 'port' in item %} --dport {{ item.port }}{% endif %}{% if 'extra' in item %} {{ item.extra }}{% endif %}{% if 'source' in item %} -s {{ item.source }}{% endif %} -j ACCEPT"
  with_items: "{{ iptables_standard }}"

- name: Allow ssh access from "Terminals"
  command: "iptables -A {{ iptables_chain }} -m state --state NEW -p tcp -m tcp --dport 22 -s {{ hostvars[item]['ansible_ssh_host'] }} -j ACCEPT"
  with_items: "{{ groups['terminals']|default(omit) }}"
  when: '"terminals" in groups'

- name: Allow SSH access from internal subnet
  command: "iptables -A {{ iptables_chain }} -m state --state NEW -p tcp -m tcp --dport 22 -s {{ subnet }} -j ACCEPT"
  become: yes
  become_method: sudo
  when: iptables_config and is_terminal

- name: LOGDROP all others
  command: "iptables -A {{ iptables_chain }} -p all -j LOGDROP"

- name: Set INPUT policy to DROP
  command: "iptables -P INPUT DROP"

- name: Set FORWARD policy to DROP
  command: "iptables -P FORWARD DROP"

- name: Allow outgoing
  command: "iptables -P OUTPUT ACCEPT"

- name: Save new rules
  command: "/sbin/service iptables save"
