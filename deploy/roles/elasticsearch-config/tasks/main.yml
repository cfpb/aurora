---
- name: Setup limits for elasticsearch
  template:
    src: 99-elasticsearch.conf.j2
    dest: /etc/security/limits.d/99-elasticsearch.conf
    mode: 0644
  notify:
    - restart elasticsearch

- name: Configure elasticsearch startup script
  template:
    src: elasticsearch.j2
    dest: /etc/sysconfig/elasticsearch
  notify:
    - restart elasticsearch

- name: Configure elasticsearch
  template:
    src: elasticsearch.yml.j2
    dest: /etc/elasticsearch/elasticsearch.yml
  notify:
    - restart elasticsearch

- name: Configure logging
  template:
    src: logging.yml.j2
    dest: /etc/elasticsearch/logging.yml
  notify:
    - restart elasticsearch

- name: Generate the roles file
  template:
    src: roles.yml.j2
    dest: /etc/elasticsearch/shield/roles.yml
  notify:
    - restart elasticsearch

- name: Load in user file to test for admin user
  command: "cat /etc/elasticsearch/shield/users"
  register: users_file
  when: not use_active_directory

- name: Generate the role mappings file
  template:
    src: role_mapping.yml.j2
    dest: /etc/elasticsearch/shield/role_mapping.yml
  when: use_active_directory
  notify:
    - restart elasticsearch

- name: Create users from config file
  command: "/usr/share/elasticsearch/bin/shield/esusers useradd {{ item.username }} -p {{ item.password }} -r {{ item.roles }}"
  when: "not use_active_directory and '{{ item.username }}' not in users_file.stdout"
  environment:
    ES_JAVA_OPTS: "-Des.path.conf=/etc/elasticsearch"
  with_items: "{{ es_users }}"
  notify:
    - restart elasticsearch

- name: Install the additional ES plugins
  command: /usr/share/elasticsearch/bin/plugin --install {{ item.plugin_name }}{% if proxy_host %} -DproxyHost={{ proxy_host }}{% endif %}{% if proxy_port %} -DproxyPort={{ proxy_port }}{% endif %}
  args:
    creates: "{{ item.plugin_path }}"
  environment:
    ES_JAVA_OPTS: "-Des.path.conf=/etc/elasticsearch"
  with_items: "{{ es_plugins }}"
  notify:
    - restart elasticsearch

- name: Ensure file permissions for ES plugins are correct
  shell: "chmod a+r {{ item.plugin_path }} -R"
  with_items: "{{ es_plugins }}"
  notify:
    - restart elasticsearch

- name: Ensure directory permissions for ES plugins are correct
  file:
    path: "{{ item.plugin_path }}"
    mode: a+x
    recurse: yes
    state: directory
  with_items: "{{ es_plugins }}"
  notify:
    - restart elasticsearch

- name: Stat key file
  stat:
    path: /etc/elasticsearch/shield/system_key
  register: system_key
  when: es_message_auth

- name: Copy key to each node
  copy:
    src: ./system_key
    dest: /etc/elasticsearch/shield/system_key
    owner: elasticsearch
    group: elasticsearch
    mode: 0600
  when: es_message_auth and system_key.stat.exists

- name: Start elasticsearch
  service:
    name: elasticsearch
    state: started
    enabled: yes
