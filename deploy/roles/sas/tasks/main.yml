---
- name: Install yum dependencies
  yum:
    name: "{{ item }}"
    state: present
  with_items:
    - libXp
  notify:
    - restart sas-server
  tags:
    - sas

- name: Make sure project directory exists
  file:
    path: "{{ sas_install_home }}"
    state: directory
    mode: 0755
  tags:
    - sas

- name: Copy the response file
  template:
    src: sas_template.txt.j2
    dest: "{{ sas_response_file_path }}"
  when: install_sas
  tags:
    - sas

- name: Run the installer in quiet mode
  # we use yes for accepting default values
  shell: "yes '' 2>/dev/null | {{ sas_install_home }}/setup.sh -console -quiet -nomsupdate -responsefile {{ sas_response_file_path }}"
  register: installer_cmd
  failed_when: installer_cmd.stderr != ""
  when: install_sas
  notify:
    - restart sas-server
  tags:
    - sas

- name: check sasenv script exists sas-console
  stat:
    path: "{{ sas_home }}/SASFoundation/{{ sas_version }}/bin/sasenv_local"
  register: setenv_file_console
  tags:
    - sas

- name: Change the library path sas-console
  lineinfile:
    dest: "{{ sas_home }}/SASFoundation/{{ sas_version }}/bin/sasenv_local"
    line: 'export LD_LIBRARY_PATH="{{ sas_home }}/Secure/sasexe:{{ sas_home }}/SASPrivateJavaRuntimeEnvironment/{{ sas_version }}/jre/lib/amd64/server:{{ sas_home }}/SASPrivateJavaRuntimeEnvironment/{{ sas_version }}/jre/lib/amd64:{{ sas_home }}/SASFoundation/{{ sas_version }}/sasexe:/usr/lib64"'
    backup: yes
  when: setenv_file_console.stat.exists == True
  notify:
    - restart sas-server
  tags:
    - sas

- name: check setenv script exists
  stat:
    path: "{{ sas_config_home }}/appserver/studio/bin/setenv.sh"
  register: setenv_file
  tags:
    - sas

- name: Change the java heap size
  lineinfile:
    dest: "{{ sas_config_home }}/appserver/studio/bin/setenv.sh"
    regexp: 'JVM_OPTS='
    line: 'JVM_OPTS="{{ java_heap_size }}"'
    backup: yes
  when: setenv_file.stat.exists == True
  notify:
    - restart sas-server
  tags:
    - sas

- name: Copy over pam.d config from login (usually works)
  copy:
    src: /etc/pam.d/login
    dest: /etc/pam.d/sasauth
    remote_src: True
  tags:
    - sas

- name: Add SAS init.d daemon script
  template:
    src: sas_init.d_template.j2
    dest: /etc/init.d/sas-studio
    mode: 0751
  tags:
    - sas

- name: Change the sas work directory
  lineinfile:
    dest: "{{ sas_home }}/SASFoundation/{{ sas_version }}/sasv9_local.cfg"
    regexp: "-WORK"
    line: "-WORK {{ sas_work_dir }}"
  tags:
    - sas

- name: Ensure log directory exists
  file:
    path: "{{ item }}"
    state: directory
  with_items:
    "{{ sas_log_file_locations }}"
  tags:
    - sas

- name: Set recursive admin permissions on log folders
  acl:
    path: "{{ item }}"
    entity: "{{ restricted_group_name }}"
    etype: group
    permissions: rX
    recursive: yes
    state: present
  with_items: "{{ sas_log_file_locations }}"
  tags:
    - sas

- name: Set default admin permissions on log folders
  acl:
    path: "{{ item }}"
    entity: "{{ restricted_group_name }}"
    etype: group
    permissions: rX
    default: yes
    state: present
  with_items: "{{ sas_log_file_locations }}"
  tags:
    - sas

- name: check sasstudio.sh script exists
  stat:
    path: "{{ sas_config_home }}/sasstudio.sh"
  register: sasstudio_file
  tags:
    - sas

- name: Enable sas service
  service:
    name: sas-studio
    state: started
    enabled: yes
  when: sasstudio_file.stat.exists == True
  tags:
    - sas
