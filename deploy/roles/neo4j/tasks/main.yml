---

- name: Create neo4j directory
  file:
    state: directory
    path: "{{ neo4j_dir }}"
    owner: "{{ neo4j_user }}"
    group: "{{ neo4j_user }}"
    mode: 0775
  tags:
  - neo4j

- name: Add neo4j user
  user:
    name: "{{ neo4j_user }}"
    system: yes
    home: "{{ neo4j_home_dir }}"
    shell: "{{ neo4j_user_shell }}"
    state: present
  tags:
  - neo4j

- name: Download neo4j
  get_url:
    url: "{{ neo4j_url }}"
    dest: "/tmp/neo4j-{{ neo4j_version }}"
  tags:
  - neo4j

- name: Extract neo4j tarball
  unarchive:
    src: "/tmp/neo4j-{{ neo4j_version }}"
    dest: "{{ neo4j_dir }}"
    copy: no
  tags:
  - neo4j

- name: Permissions for neo4j home directory
  file:
    state: directory
    mode: 0775
    path: "{{ neo4j_home_dir }}"
    owner: "{{ neo4j_user }}"
    group: "{{ neo4j_user }}"
    recurse: yes
  tags:
  - neo4j

- name: Open port for neo4j in iptables
  command: "iptables -I {{ iptables_chain }} 3 -m state --state NEW -p tcp --dport {{ neo4j_port }} -j ACCEPT"
  when: iptables_config
  tags:
  - neo4j

- name: Open HTTP port for neo4j in iptables
  command: "iptables -I {{ iptables_chain }} 3 -m state --state NEW -p tcp --dport {{ neo4j_http_port }} -j ACCEPT"
  when: iptables_config
  tags:
  - neo4j

- name: Set neo4j configuration file
  sudo: yes
  template:
    src: neo4j.conf.j2
    dest: "{{ neo4j_conf_dir }}/neo4j.conf"
    owner: "{{ neo4j_user }}"
    group: "{{ neo4j_user }}"
  notify:
    - restart neo4j
  tags:
  - neo4j

- name: Create neo4j pid directory
  file:
    state: directory
    path: "{{ neo4j_pid_dir }}"
    owner: "{{ neo4j_user }}"
    group: "{{ neo4j_user }}"
    recurse: yes
    mode: 0775
  tags:
  - neo4j

- name: Copy neo4j.pid
  template:
    src: neo4j.pid.j2
    dest: "{{ neo4j_pid_dir }}/neo4j.pid"
    owner: "{{ neo4j_user }}"
    group: "{{ neo4j_user }}"
    mode: 0775
  tags:
  - neo4j

- name: Create neo4j log directory
  file:
    state: directory
    path: "{{ neo4j_log_dir }}"
    owner: "{{ neo4j_user }}"
    group: "{{ neo4j_user }}"
    recurse: yes
    mode: 0775
  tags:
  - neo4j

- name: Copy neo4j.log
  template:
    src: neo4j.log.j2
    dest: "{{ neo4j_log_dir }}/neo4j.log"
    owner: "{{ neo4j_user }}"
    group: "{{ neo4j_user }}"
    mode: 0775
  tags:
  - neo4j

- name: Create neo4j data directory
  file:
    state: directory
    path: "{{ neo4j_data_dir }}"
    owner: "{{ neo4j_user }}"
    group: "{{ neo4j_user }}"
    mode: 0775
  tags:
  - neo4j

- name: Neo4j symlinks
  file:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    state: link
  with_items:
    - { src: "{{ neo4j_main_dir }}", dest: "{{ neo4j_bin_dir }}" }
  notify:
    - restart neo4j
  tags:
  - neo4j

- name: Ensure neo4j environment is set
  template:
    src: neo4j-env.sh.j2
    dest: /etc/profile.d/neo4j.sh
    mode: 0644
  tags:
  - neo4j

- name: Ensure neo4j path
  lineinfile:
    dest: /etc/rsyslog.conf
    line: neo4j.*                                                 {{ neo4j_log_dir }}
    insertafter: local7.*                                       /var/log/boot.log
    state: present
  tags:
  - neo4j

- name: copy neo4j upstart script to /etc/init/neo4j.conf
  template:
    src: neo4j.upstart.j2
    dest: /etc/init/neo4j.conf
    mode: 0644
  tags:
  - neo4j

- name: set open fd soft and hard limit for Neo4j
  sudo: yes
  lineinfile:
    dest=/etc/security/limits.conf
    regexp="{{ item.regexp }}"
    line="{{ item.line }}"
    insertbefore="# End of file"
    state=present
  with_items:
    - { regexp: '^neo4j\s+soft', line: 'neo4j   soft    nofile  {{ neo4j_nofile_value }}' }
    - { regexp: '^neo4j\s+hard', line: 'neo4j   hard    nofile  {{ neo4j_nofile_value }}' }
  when: neo4j_update_limits
  tags:
  - neo4j

- name: set open fd soft and hard limit for root
  sudo: yes
  lineinfile:
    dest=/etc/security/limits.conf
    regexp="{{ item.regexp }}"
    line="{{ item.line }}"
    insertbefore="# End of file"
    state=present
  with_items:
    - { regexp: '^neo4j\s+soft', line: 'root soft    nofile  {{ neo4j_nofile_value }}' }
    - { regexp: '^neo4j\s+hard', line: 'root hard    nofile  {{ neo4j_nofile_value }}' }
  when: neo4j_update_limits
  tags:
  - neo4j

- name: add limits.so
  lineinfile:
    dest: /etc/pam.d/su
    line: session         required        pam_limits.so
    state: present
    insertafter: EOF

- name: start neo4j
  shell: "{{ neo4j_bin_dir}}/neo4j start"
  tags:
  - neo4j
