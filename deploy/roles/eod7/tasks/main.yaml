---
- name: Install EOD dependencies
  become: yes
  become_method: sudo
  yum:
    name: "{{ item }}"
    state: present
  with_items:
    - openssl
    - openssl-devel
#   - abyssinica-fonts
    - tree
    - expect
  tags:
    - eod

- include: install_eod.yaml
  when: eod_install

- include: upgrade_eod.yaml
  when: eod_upgrade

- name: Configure node.cfg
  template:
    src: node.cfg.j2
    dest: "{{ eod_install_directory }}/conf/admin/node.cfg"
  when: eod_datastore_directory is defined

- name: Configure cluster.cfg
  template:
    src: cluster.cfg.j2
    dest: "{{ eod_install_directory }}/conf/admin/cluster.cfg"
  when: custom_repo
  notify:
    - restart eod
  tags:
    - eod

- name: Create admin user directories
  file:
    state: directory
    path: "{{ eod_install_directory }}/conf/users/{{ item }}"
    owner: root
    group: root
    mode: 0750
  with_items: "{{ eod_admins }}"

- name: Ensure admins can login via Connection Server
  template:
    src: admin_settings.cfg.j2
    dest: "{{ eod_install_directory }}/conf/users/{{ item }}/settings.cfg"
  with_items: "{{ eod_admins }}"

- name: Configure xdmcp
  template:
    src: XDMCP_Query.cfg
    dest: "{{ eod_install_directory }}/conf/admin/Xconfig/XDMCP_Query.cfg"
  notify:
    - restart eod
    - restart gdm
#   - restart prefdm
  when: custom_repo
  tags:
    - eod

- name: Configure EOD license file
  template:
    src: akeys
    dest: "{{ eod_install_directory }}/conf/admin/akeys"
  when: custom_repo
  notify:
    - restart eod
  tags:
    - eod

- name: Configure PAM authentication
  template:
    src: exceed-connection-server
    dest: /etc/pam.d/exceed-connection-server
    mode: 0644
  notify:
    - restart eod
  tags:
    - eod

# TODO: Add template for node.cfg

### Install and configure Desktop Environment

- name: install X Window System
  yum:
    name: "@X Window System"
    state: present
  tags:
    - eod

- name: install Desktop
  yum:
    name: "@gnome-desktop"
    state: present
  tags:
    - eod

#- name: install Server with GUI 
#  yum:
#    name: "@^Server with GUI"
#    state: present
#  register: serverwithgui
#  tags:
#    - eod
#- debug: var="{{ serverwithgui.stdout }}"

#- name: install MATE (GNOME 2) Desktop 
#  yum:
#    name: "@MATE Desktop"
#    state: present
#  register: matedesktop
#  tags:
#    - eod
#- debug: var="{{ matedesktop.stdout }}"
- name: install epel-latest repo
  command: yum -y install https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm

- name: install XFCE4 Desktop 
  yum:
    name: "@xfce"
    state: present
  register: xfce4desktop
  tags:
    - eod
#- debug: var="{{ xfce4desktop.stdout }}"

- name: install MATE (GNOME 2) Desktop 
  command: yum -y groupinstall "MATE Desktop"
#  yum:
#    name: "@MATE Desktop"
#    state: present
#  register: matedesktop
#  tags:
#    - eod
#- debug: var="{{ matedesktop.stdout }}"

#- name: install General Purpose Desktop
- name: install Fonts
  yum:
    name: "@fonts"
    state: present
  tags:
    - eod

- name: Install Firefox
  yum:
    name: firefox
    state: present
  tags:
    - eod

- name: configure custom.conf
  template:
    src: custom.conf
    dest: /etc/gdm/custom.conf
    mode: 0644
  notify:
    - restart gdm
#   - restart prefdm
  tags:
    - eod

- name: Set configuration settings for gdm defaults
  shell: "gconftool-2 --direct --config-source xml:readwrite:/etc/gconf/gconf.xml.defaults --type {{ item.type }} --set {{ item.setting }} {{ item.value }}"
  with_items: "{{ gconf_settings }}"
  notify:
    - restart gdm
#   - restart prefdm
  tags:
    - eod

- name: Set configuration settings for gdm mandatory
  shell: "gconftool-2 --direct --config-source xml:readwrite:/etc/gconf/gconf.xml.mandatory --type {{ item.type }} --set {{ item.setting }} {{ item.value }}"
  with_items: "{{ gconf_settings }}"
  notify:
    - restart gdm
#   - restart prefdm
  tags:
    - eod
# - can configure with systemctl set-default TARGET.target
- name: configure inittab
  template:
    src: inittab
    dest: /etc/inittab
  tags:
    - eod


- name: set runlevel 5 graphical.target on startup
  command: systemctl set-default graphical.target
  register: xtarget
  tags:
    - eod
#- debug: var=xtarget.stdout_lines

- name: configure xorg.conf
  template:
    src: xorg.conf
    dest: /etc/X11/xorg.conf
  notify:
    - restart gdm
#   - restart prefdm
  tags:
    - eod

- name: configure package update proxy
  template:
    src: 20-no-show-proxy-dialog.pkla
    dest: /etc/polkit-1/localauthority/30-site.d/20-no-show-proxy-dialog.pkla
    mode: 0644
  notify:
    - restart eod
  tags:
    - eod

- name: remove S99firstboot
  file:
    path: /etc/rc5.d/S99firstboot
    state: absent
  tags:
    - eod

- name: Set /etc/gdm/gdm.schema file
  template:
    src: gdm.schemas.j2
    dest: /etc/gdm/gdm.schemas
    mode: 0644
  notify:
    - restart eod
  tags:
  - eod

- name: Remove gpk-update-icon file from /etc/xdg/autostart directory
  file:
    path: /etc/xdg/autostart/gpk-update-icon.desktop
    state: absent
  tags:
    - eod

- name: run gdm
# command: start prefdm  -- for CentOS/RHEL6
  command: systemctl start display-manager 
  register: gdm_status
  failed_when: gdm_status.rc != 0 and "Job is already running" not in gdm_status.stderr
  changed_when: gdm_status.rc == 0
  tags:
    - eod

### Ensure EOD starts on boot

- name: Check if EOD is configured to run on boot
  shell: "{{ eod_install_directory }}/bin/otecs bootstatus"
  register: eod_bootstatus
  changed_when: false
  when: custom_repo
  tags:
    - eod

- name: Configure EOD to start on boot
  shell: "{{ eod_install_directory }}/bin/otecs bootstart"
  changed_when: eod_bootstatus.stdout == 'off'
  when: custom_repo
  tags:
    - eod

### Allow the admin group to read logs and configs

- name: Ensure that EOD log directory exists
  file:
    path: "{{ eod_install_directory }}/log"
    state: directory
    owner: root
    group: root
    mode: 0640
  tags:
    - eod

- name: Set recursive admin permissions on log file
  acl:
    path: "{{ eod_install_directory }}"
    entity: "{{ restricted_group_name }}"
    etype: group
    permissions: rwX
    recursive: yes
    state: present
  tags:
    - eod

- name: Set default admin permissions on log file
  acl:
    path: "{{ eod_install_directory }}"
    entity: "{{ restricted_group_name }}"
    etype: group
    permissions: rwX
    default: yes
    state: present
  tags:
    - eod

### Ensure the needed ports are open
- name: create custom chain
  command: "iptables -N {{ iptables_chain }}"
  ignore_errors: yes

- name: open up ports in ipconfig
  command: "iptables -A {{ iptables_chain }} -p tcp -m tcp --dport {{ item }} -j ACCEPT"
  #command: "iptables -I {{ iptables_chain }} 3 -p tcp -m tcp --dport {{ item }} -j ACCEPT"
  with_items: "{{ eod_client_ports }}"
  when: iptables_config and deploy_iptables
  tags:
    - eod

- name: open up udp port in ipconfig
  command: "iptables -A {{ iptables_chain }} -p udp -m udp --dport {{ item }} -j ACCEPT"
  #command: "iptables -I {{ iptables_chain }} 3 -p udp -m udp --dport {{ item }} -j ACCEPT"
  with_items: "{{ eod_client_ports_udp }}"
  when: iptables_config and deploy_iptables
  tags:
    - eod

- name: install iptables-service
  command: yum -y install iptables-services

- name: save the new ipconfig
  command: "/sbin/service iptables save"
  when: iptables_config and deploy_iptables
  tags:
    - eod

#- name: Add /usr/local/eod/conf/admin/Xconfig/*.cfg files to register
#  shell: find /usr/local/eod/conf/admin/Xconfig/ -type f -name \*.cfg -printf "%f\n"
#  register: cfg_files
#  ignore_errors: yes
#  tags:
#    - eod
#  when: custom_repo

#- name: Add XkbExtension to four files
#  lineinfile:
#    dest: "{{ eod_Xconfig_directory }}/{{ item }}"
#    regexp: XkbExtension
#    line: XkbExtension=1
#  with_items: "{{ cfg_files.stdout_lines }}"
#  when: custom_repo
#  tags:
#    - eod
#  when: custom_repo

#- name: Add Composite to four files
#  lineinfile:
#    dest: "{{ eod_Xconfig_directory }}/{{ item }}"
#    regexp: Composite
#    line: Composite=1
#  with_items: "{{ cfg_files.stdout_lines }}"
#  when: custom_repo
#  tags:
#    - eod
