---
- name: Install EOD dependencies
  yum:
    name: "{{ item }}"
    state: present
  with_items:
    - openssl
    - openssl-devel
    - expect
  tags:
    - eod

- name: Copy over the EOD bin file
  copy:
    src: "{{ eod_local_bin_directory }}/{{ eod_binary }}"
    dest: "{{ eod_bin_directory }}/{{ eod_binary }}"
  when: custom_repo
  tags:
    - eod

- name: chmod eod bin
  file:
    path: "{{ eod_bin_directory }}/{{ eod_binary }}"
    mode: a+x
  when: custom_repo
  tags:
    - eod

- name: Ensure that eod directory exists
  file:
    path: "{{ eod_install_directory }}/"
    state: directory
  tags:
    - eod

- name: copy the eod expect script
  template:
    src: install_eod_server.exp
    dest: /tmp/install_eod_server.exp
    mode: a+x
  tags:
    - eod

- name: run EOD expect script
  shell: /tmp/install_eod_server.exp
  when: custom_repo
  args:
    creates: "{{ eod_install_directory }}/bin/install"
  tags:
    - eod

- name: Ensure that EOD log directory exists
  file:
    path: "{{ eod_install_directory }}/log"
    state: directory

- name: run eod silent install
  shell: "{{ eod_install_directory }}/bin/install -s"
  when: custom_repo
  args:
    creates: "{{ eod_install_directory }}/bin/otecs"
  tags:
    - eod

- name: configure cluster.cfg
  template:
    src: cluster.cfg
    dest: "{{ eod_install_directory }}/conf/admin/cluster.cfg"
  when: custom_repo
  notify:
    - restart eod
  tags:
    - eod

- name: configure xdmcp
  template:
    src: XDMCP_Query.cfg
    dest: "{{ eod_install_directory }}/conf/admin/Xconfig/XDMCP_Query.cfg"
  notify:
    - restart eod
    - restart gdm
    - restart prefdm
  when: custom_repo
  tags:
    - eod

- name: configure eod license file
  template:
    src: akeys
    dest: "{{ eod_install_directory }}/conf/admin/akeys"
  when: custom_repo
  notify:
    - restart eod
  tags:
    - eod

- name: install X Window System
  yum:
    name: "@X Window System"
    state: present
  tags:
    - eod

- name: install Desktop
  yum:
    name: "@Desktop"
    state: present
  tags:
    - eod

- name: install General Purpose Desktop
  yum:
    name: "@General Purpose Desktop"
    state: present
  tags:
    - eod

- name: Install Firefox
  yum:
    name: firefox
    state: present
  tags:
    - eod

- name: configure custom.conf
  template:
    src: custom.conf
    dest: /etc/gdm/custom.conf
    mode: 0644
  notify:
    - restart gdm
    - restart prefdm
  tags:
    - eod

- name: Set configuration settings for gdm
  shell: "gconftool-2 --direct --config-source xml:readwrite:/etc/gconf/gconf.xml.mandatory --type {{ item.type }} --set {{ item.setting }} {{ item.value }}"
  with_items: "{{ gconf_settings }}"
  notify:
    - restart gdm
    - restart prefdm
  tags:
    - eod

- name: configure inittab
  template:
    src: inittab
    dest: /etc/inittab
  tags:
    - eod

# TODO: ensure video driver?
- name: configure xorg.conf
  template:
    src: xorg.conf
    dest: /etc/X11/xorg.conf
  notify:
    - restart gdm
    - restart prefdm
  # notify:
  #   - ensure video driver
  tags:
    - eod

- name: configure exceed connection server
  template:
    src: exceed-connection-server
    dest: /etc/pam.d/exceed-connection-server
    mode: 0644
  notify:
    - restart eod
  tags:
    - eod

#- name: configure system-auth-ac
#  template:
#    src: system-auth-ac
#    dest: /etc/pam.d/system-auth-ac
#  notify:
#    - restart eod

#- name: Update authconfig
#  command: authconfig --enablewinbind --update

#- name: validate password-auth-ac
#  shell: cat /etc/pam.d/password-auth-ac
#  register: password_result
#  notify:
#    - restart eod

#- assert:
#    that:
#      - "'krb5' in password_result.stdout"
#      - "'winbind' in password_result.stdout"

- name: configure package update proxy
  template:
    src: 20-no-show-proxy-dialog.pkla
    dest: /etc/polkit-1/localauthority/30-site.d/20-no-show-proxy-dialog.pkla
    mode: 0644
  notify:
    - restart eod
  tags:
    - eod

- name: open up ports in ipconfig
  command: "iptables -I {{ iptables_chain }} 3 -p tcp -m tcp --dport {{ item }} -j ACCEPT"
  with_items: "{{ eod_client_ports }}"
  when: iptables_config
  tags:
    - eod

- name: open up udp port in ipconfig
  command: "iptables -I {{ iptables_chain }} 3 -p udp -m udp --dport {{ item }} -j ACCEPT"
  with_items: "{{ eod_client_ports_udp }}"
  when: iptables_config
  tags:
    - eod

- name: save the new ipconfig
  command: "/sbin/service iptables save"
  when: iptables_config
  tags:
    - eod

- name: remove S99firstboot
  file:
    path: /etc/rc5.d/S99firstboot
    state: absent
  tags:
    - eod

- name: run gdm
  command: start prefdm
  register: gdm_status
  failed_when: gdm_status.rc != 0 and "Job is already running" not in gdm_status.stderr
  changed_when: gdm_status.rc == 0
  tags:
    - eod

- name: Check if EOD is configured to run on boot
  shell: /usr/local/eod/bin/otecs bootstatus
  register: eod_bootstatus
  changed_when: false
  when: custom_repo
  tags:
    - eod

- name: Configure EOD to start on boot
  shell: /usr/local/eod/bin/otecs bootstart
  changed_when: eod_bootstatus.stdout == 'off'
  when: custom_repo
  tags:
    - eod

- name: Create Xconfig directory
  file:
    path: "{{ eod_Xconfig_directory }}"
    state: directory
    mode: 0755
  tags:
    - eod

- name: Set /etc/gdm/gdm.schema file
  template:
    src: gdm.schemas.j2
    dest: /etc/gdm/gdm.schemas
    mode: 0644
  notify:
    - restart eod
  tags:
  - eod

- name: Install yum packages
  yum:
    name: "{{ item }}"
    state: present
  with_items:
#    - pixmap-miscfixed-font
#    - pixmap-fixed-fonts
#    - abyssinica
    - tree
  tags:
    - eod

- name: Remove gpk-update-icon file from /etc/xdg/autostart directory
  file:
    path: /etc/xdg/autostart/gpk-update-icon.desktop
    state: absent
  tags:
    - eod

- name: Add /usr/local/eod/conf/admin/Xconfig/*.cfg files to register
  shell: find /usr/local/eod/conf/admin/Xconfig/ -type f -name \*.cfg -printf "%f\n"
  register: cfg_files
  ignore_errors: yes
  tags:
    - eod

- name: Add XkbExtension to four files
  lineinfile:
    dest: "{{ eod_Xconfig_directory }}/{{ item }}"
    regexp: XkbExtension
    line: XkbExtension=1
  with_items: "{{ cfg_files.stdout_lines }}"
  when: custom_repo
  tags:
    - eod

- name: Add Composite to four files
  lineinfile:
    dest: "{{ eod_Xconfig_directory }}/{{ item }}"
    regexp: Composite
    line: Composite=1
  with_items: "{{ cfg_files.stdout_lines }}"
  when: custom_repo
  tags:
    - eod
