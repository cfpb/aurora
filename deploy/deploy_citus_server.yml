# deploy_citus_server.yml
---
- hosts: citus
  become: yes
  become_method: sudo
  serial: 1
  roles:
    - {role: iptables, when: "iptables_config"}
    - common
    - {role: epel, when: "use_epel and not 'production' in group_names"}
    - {role: log-courier, when: "install_logstash"}
    - jdk
    - postgresql-server
    - citus
  tasks:
    - name: Install utilities
      yum:
        name: sysstat
        state: present

    - name: Ensure sysstat is enabled
      service:
        name: sysstat
        state: started
        enabled: yes

  post_tasks:
    - name: Ensure file transfer folder exists
      file:
        dest: "{{ pp_file_transfer_dir }}"
        state: directory
        mode: 0755
        owner: postgres
        group: postgres

    - name: Create symlink from PPAS data directory
      file:
        dest: "{{ pp_datadir }}/file_transfers"
        src: "{{ pp_file_transfer_dir }}"
        state: link

    - name: Check WAL directory exists
      stat:
        path: "{{ pp_xlogdir }}/{{ pg_wal }}"
      register: stat_result

    - name: Move WAL directory to proper location
      command: "mv {{ pp_datadir }}/{{ pg_wal }} {{ pp_xlogdir }}"
      when: stat_result.stat.exists == False

    - name: Ensure symlink exists for WAL directory
      file:
        dest: "{{ pp_datadir }}/{{ pg_wal }}"
        src: "{{ pp_xlogdir }}{{ pg_wal }}"
        state: link

    - name: Setup host file
      lineinfile:
        dest: /etc/hosts
        regexp: '[[0-9+]\.]+\s+{{ item }}'
        line: "{{ hostvars[item]['ansible_ssh_host'] }} {{ item }}"
      with_items: "{{ groups['citus'] }}"
      when: not custom_repo

    - name: Ensure PG is started
      service:
        name: "{{ pp_servicename }}"
        state: started
        enabled: yes

- hosts: citus
  become: yes
  become_method: sudo
  serial: 1
  roles:
    - postgresql-server-config
    - psql-authnz
  post_tasks:
    - name: Create Citus extension
      postgresql_exec:
        login_host: localhost
        login_user: "{{ pp_superaccount }}"
        login_password: "{{ pp_superpassword }}"
        port: "{{ pp_serverport }}"
        db: "{{ item }}"
        script: CREATE EXTENSION IF NOT EXISTS citus
      check_mode: no
      with_items:
        - postgres

- hosts: citus_coordinator
  become: yes
  become_method: sudo
  serial: 1
  roles:
    - role: citus_coordinator
  tasks:
    - name: Create back up of postgresql.conf
      copy:
        src: "{{ pp_datadir }}/postgresql.conf"
        dest: "/tmp/postgresql.conf"
        remote_src: yes
        mode: "0600"

    - name: Create archive directory
      file:
        state: directory
        path: "{{ pp_datadir }}/archives"

- hosts: citus_coordinator_standby
  serial: 1
  roles:
    - {role: citus_coordinator_standby, when: "{{ pp_install }}"}
