# main.yml - Default variables for testing
---

# Real variables should be placed in respective environment directories within
# the group_vars folder, for example /group_vars/development

#======================#
### GENERAL SETTINGS ###
#======================#

# Specifies which file server to connect to, doesn't really matter which one
# you use.
default_file_server: 10.0.1.4

default_admin_terminal: admin_terminal

# Define all GlusterFS "bricks" you want here.  Folders will be created on the
# file server based on these settings, and GlusterFS volumes will be created and
# mounted on client servers.
shared_folders:
  - name: data
    state: mounted
  - name: work
    state: mounted
  - name: testorg
    state: mounted

# Allows servers to use one of the GlusterFS volumes as a shared home directory
home_directory: "/testorg"

# Location for importing data into PPAS
pp_file_transfer_dir: "/home/work/dw/file_transfers"

# Adds a customizeable masthead to all configuration files deployed by Ansible.
template_masthead: |
  #=======================================================
  # Test Organization
  #-------------------------------------------------------
  #
  # This file was generated by Ansible, any changes will
  # be overwritten.
  #

# Human readable org name
organization_name: "Test Organization"

# Geography
country: US
state: DC
city: Washington

# Determines if custom RPMS can be installed, or need to be built
custom_repo: False

# Whether or not to allow EPEL
use_epel: True

# Toggle whether or not to install GlusterFS clients
install_glusterfs: True
mount_glusterfs: True

# Toggle whether or not to install EOD
# NOTE: If set to yes, you must provide the EOD binary file
# and a license key or license server.  The default is off
# for this reason
install_eod: False

# Allow disabling of Python building when needed
install_python: True

# Proxy settings
proxy_host:
proxy_port:

# Git branch settings
git_environment: master

# Puppet disabling on?
disable_puppet: False

# Location on the local machine where artifacts can be found
# (by default, the directory ansible is run from)
artifacts_dir: .

#==============#
### IPTABLES ###
#==============#

# Enable or disable the configuration of iptables rules
iptables_config: True
deploy_iptables: True

# Allow custom iptables chain to be used, if needed
iptables_chain: TEST-INPUT

# This list of dictonaries defines global IP tables rules
iptables_standard:
  -
    port: 22
    protocol: tcp

subnet: 0.0.0.0/0

#===================#
### HTTP SETTINGS ###
#===================#

# Global domain name and TLD
domain_name: test.dev

# Settings for the proxy server
proxy_subdomain: proxy

# Whether or not to enable SSL
enable_ssl: True
generate_certs: True
ssl_cert_file: /etc/httpd/ssl/apache.crt
ssl_key_file: /etc/httpd/ssl/apache.key
ssl_chain_file: /etc/httpd/ssl/apache.crt

apache_service: httpd24-httpd

nginx_ssl_cert_file: /etc/nginx/ssl/nginx.crt
nginx_ssl_key_file: /etc/nginx/ssl/nginx.key
nginx_ssl_protocols: "TLSv1.2 TLSv1.1"

apache_use_ldap: True

#=======================#
### KERBEROS SETTINGS ###
#=======================#

use_active_directory: False

# Whether or not the HTTP keytab must be created
# Should only be "True" when using Vagrant
create_keytabs: True

# Primary Realm name
default_realm_name: TEST.DEV

# The KDC Server
kdc_domain_name: kdc.test.dev

# KRB Service user, if available
krb_service_user: testuser
krb_service_user_password: password

# Enable or disable mapping of Kerberos user principles to regular usernames
krb_user_mapping: "Off"

# Name of the HTTP keytab file
keytab_filename: http.keytab

# List of dictionaries for each Kerberos Realm
realms:
  - name: TEST.DEV
    domain_name: test.dev
    kdc_domain_name: kdc.test.dev:88
    admin_domain_name: kdc.test.dev:749

# Whether or not to ask for password when using HTTP auth
krb_ask_pass: "On"

kerberos_enabled: True

#===================#
### LDAP SETTINGS ###
#===================#

# LDAP Server
ldap_subdomain: ldap
ldap_server: kdc.test.dev
ldap_user_scope: "cn=Users"
ldap_group_scope: "cn=Groups"
ldap_user_filter: "uid={username}"

# LDAP Service Account
ldap_service_account: admin
ldap_service_account_password: password

# App specific settings

# For the proxy server test page
restricted_group_name: admin

# Research Environment
install_odbc: True

#============================#
### ELASTICSEARCH SETTINGS ###
#============================#
es_cluster: test_cluster
install_logstash: True
es_endpoint: https://es.test.dev
es_protocol: https
es_hostname: es.test.dev
es_service_account: admin
es_service_account_password: password
es_user: elasticsearch

#===================#
### GOCD Settings ###
#===================#

# Variables used for running the test suite
gocd_service_username: admin
gocd_service_password: password

#=========================#
### PostgreSQL Settings ###
#=========================#

# Superuser
pp_superaccount: postgres
pp_superpassword: password

# PPAS Port
pp_serverport: 5432

# Default service account
deploy_user: vagrant
pp_dba_username: vagrant
pp_dba_password: vagrant

pp_custom_test_scripts:
  -
    script: "SELECT 1;"
    assertion: "test_output['results'][0]['query_result'] == [[1]]"

# WAL directory
pg_wal: pg_wal

# Eod symlinks
eod_symlinks: []

# Research environment printers symlinks
printers_symlinks: []

# User provided packages for database customization
db_automation_custom_packages: []
db_automation_package_state: present

#====================#
### Mesos Settings ###
#====================#
mesos_upgrade: False
marathon_upgrade: False

#======================#
### RedHat 7 Upgrade ###
#======================#
rh7_upgrade: False
