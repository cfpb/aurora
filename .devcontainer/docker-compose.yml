#-------------------------------------------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See https://go.microsoft.com/fwlink/?linkid=2090316 for license information.
#-------------------------------------------------------------------------------------------------------------

  version: '3'
  services:
    docker-in-docker:
      # Uncomment the next line to use a non-root user for all processes. You can also
      # simply use the "remoteUser" property in devcontainer.json if you just want VS Code
      # and its sub-processes (terminals, tasks, debugging) to execute as the user. On Linux,
      # you may need to update USER_UID and USER_GID in .devcontainer/Dockerfile to match your
      # user if not 1000. See https://aka.ms/vscode-remote/containers/non-root for details.
      # user: vscode
      environment:
        CONTAINERNAME: docker-in-docker
      build: 
        context: .
        dockerfile: Dockerfile
  
      volumes:
        # Update this to wherever you want VS Code to mount the folder of your project
        - ..:/workspace:cached
  
        # Forwards the local Docker socket to the container.
        - /var/run/docker.sock:/var/run/docker.sock 
        - ./bashrc:/root/.bashrc 
        # make sure this file exists on your host machine else it will be created as a directory
        - ~/.local/share/fish/docker_fish_history:/root/.local/share/fish/fish_history
  
      # Uncomment the next four lines if you will use a ptrace-based debuggers like C++, Go, and Rust.
      # cap_add:
      #  - SYS_PTRACE
      # security_opt:
      #   - seccomp:unconfined
  
      # Overrides default command so things don't shut down after the process ends.
      command: sleep infinity 
      networks:
        ansible_nw:
          ipv4_address: 10.0.1.253
  #please note: the spacing needs to line up w/ the other yaml templates
    citus_coordinator: 
      image: centos7-sshd:latest
      restart: always
      privileged: true
      volumes:
        - /sys/fs/cgroup:/sys/fs/cgroup:ro
        - ../yumcache:/var/cache/yum:cached
      networks:
        ansible_nw:
          ipv4_address: 10.0.1.40
  
#please note: the spacing needs to line up w/ the other yaml templates
    citus_coordinator_standby: 
      image: centos7-sshd:latest
      restart: always
      privileged: true
      volumes:
        - /sys/fs/cgroup:/sys/fs/cgroup:ro
        - ../yumcache:/var/cache/yum:cached
      networks:
        ansible_nw:
          ipv4_address: 10.0.1.44
  
#please note: the spacing needs to line up w/ the other yaml templates
    citus_worker_1: 
      image: centos7-sshd:latest
      restart: always
      privileged: true
      volumes:
        - /sys/fs/cgroup:/sys/fs/cgroup:ro
        - ../yumcache:/var/cache/yum:cached
      networks:
        ansible_nw:
          ipv4_address: 10.0.1.41
  
#please note: the spacing needs to line up w/ the other yaml templates
    citus_worker_2: 
      image: centos7-sshd:latest
      restart: always
      privileged: true
      volumes:
        - /sys/fs/cgroup:/sys/fs/cgroup:ro
        - ../yumcache:/var/cache/yum:cached
      networks:
        ansible_nw:
          ipv4_address: 10.0.1.42
  
#please note: the spacing needs to line up w/ the other yaml templates
    citus_worker_3: 
      image: centos7-sshd:latest
      restart: always
      privileged: true
      volumes:
        - /sys/fs/cgroup:/sys/fs/cgroup:ro
        - ../yumcache:/var/cache/yum:cached
      networks:
        ansible_nw:
          ipv4_address: 10.0.1.43
  
    #please note: the spacing needs to line up w/ the other yaml templates
    matlab: 
      image: centos7-sshd:latest
      restart: always
      privileged: true
      volumes:
        - /sys/fs/cgroup:/sys/fs/cgroup:ro
        - ../yumcache:/var/cache/yum:cached
      networks:
        ansible_nw:
          ipv4_address: 10.0.1.23
  
  networks:
    ansible_nw:
      ipam:
        config:
          - subnet: 10.0.1.0/24
